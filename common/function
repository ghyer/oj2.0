//All of common function write here.
int strToInt(string a) {
    int ans = 0;
    int len = a.length();
    for (int i = 0; i < len; i ++) {
        ans = ans * 10 + a[i] - '0';
    }
    return ans;
}

string intToStr(int num) {
    string a;
    char s[20];
    if(num < 0) {
        a = "-";
        num = -(num);
    }
    int i = 0;
    do {
        s[i] = (char)((num % 10) + '0');
        i ++;
        num /= 10;
    } while(num);
    i --;
    while (i >= 0) {
        a += s[i];
        i --;
    }
    return a;
}

string getConfig(string *config, int cnt, const char *config_name) {
    bool  flag;
    bool  get_or_not = false;
    string ans;
    int   lenc = strlen(config_name);
    for (int i = 0; i < cnt; i ++) {
        int len = config[i].length();
        for (int j = 0; j < len; j ++) {
            if (config[i][j] == ' ') {
                continue;
            } else {
                flag = true;
                for (int k = 0; k < lenc; k ++) {
                    if (config_name[k] == config[i][j]) {
                        j ++;
                    } else {
                        //the current line or not
                        //if not, go to next line and repeat
                        flag = false;
                        break;
                    }
                }
                if (!flag) {
                    break;
                } else {
                    get_or_not = true;
                    while (config[i][j] == ' ' || config[i][j] == '=') {
                        j ++;
                    }
                    ans.clear();
                    while (j < len && config[i][j] != '\0' && config[i][j] != '\n' && config[i][j] != '\r') {
                        ans += config[i][j];
                        j ++;
                    }
                    return ans;
                }
            }
        }
    }
    if (!get_or_not) {
        cout << "Lack of Parameter \"" << config_name << "\" in config file" << endl;
        exit(EXIT_FAILURE);
    }
}

void throwError (int code) {
    cout << "Error code is :" << code << endl;
    exit(1);
}