//mysql class
class Mysqlc {
private:
    Connection conn;
public:
    void updateCompile (int solution_id, FILE *fp, const char *first) {
        char buf[1000];
        Query query(NULL);
        StoreQueryResult result;
        string compile_info = (string)first;
        if (fp == NULL) {
            throwError(COMPILE_TLE);
        }
        while (fgets(buf, sizeof(buf), fp) != NULL) {
            compile_info += (string) buf;
        }
        query = conn.query("SELECT solution_id FROM compileinfo WHERE solution_id=%0q");
        query.parse();
        result = query.store(intToStr(solution_id));
        query.reset();
        if (result.num_rows() == 0) {
            query = conn.query("INSERT INTO compileinfo (solution_id,error) VALUES (%0q,%1q)");
            query.parse();
            query.execute(intToStr(solution_id), compile_info);
        } else {
            query = conn.query("UPDATE compileinfo SET error = %0q WHERE solution_id = %1q");
            query.parse();
            query.execute(compile_info, intToStr(solution_id));
        }
    }
    void load (Config &conf) {
        if (!conn.connect(conf.get("DB_NAME"), conf.get("DB_URL"), conf.get("DB_USER"), conf.get("DB_PASS"), strToInt(conf.get("DB_PORT")))){
            throwError(CONNECT_ERROR);
        }
    }
    int getProblemId (int solution_id) {
        Query query = conn.query("SELECT problem_id FROM solution WHERE solution_id=%0q");
        query.parse();
        StoreQueryResult res = query.store(intToStr(solution_id));
        Row line = res[0];
        return line["problem_id"];
    }
    pair<int,int> getLimit (int problem_id) {
        Query query = conn.query("SELECT memory_limit,time_limit FROM problem WHERE problem_id=%0q");
        query.parse();
        StoreQueryResult res = query.store(intToStr(problem_id));
        Row line = res[0];
        return make_pair(line["memory_limit"],line["time_limit"]);
    }
    string getCode (int solution_id) {
        Query query = conn.query("SELECT source FROM source_code WHERE solution_id=%0q");
        query.parse();
        StoreQueryResult res = query.store(intToStr(solution_id));
        Row line = res[0];
        return (string)line["source"];
    }
    void setResult (int solution_id, int result) {
        Query query = conn.query("UPDATE solution SET result=%0q WHERE solution_id=%1q");
        query.parse();
        query.execute(intToStr(result), intToStr(solution_id));
    }
    void collect (int right_cnt, int all_cnt, int solution_id) {
        if (right_cnt == all_cnt) {
            setResult(solution_id, AC);
        } else {
            setResult(solution_id, WA);
        }
    }
};
